"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SmoothPolyline = void 0;
var _tslib = require("tslib");
var _gLite = require("@antv/g-lite");
var Smooth = _interopRequireWildcard(require("./util/smooth"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var SmoothPolyline = exports.SmoothPolyline = /** @class */function (_super) {
  (0, _tslib.__extends)(SmoothPolyline, _super);
  function SmoothPolyline(config) {
    var _this = _super.call(this, config) || this;
    _this.updatePath();
    return _this;
  }
  SmoothPolyline.prototype.setAttribute = function (name, value, force) {
    _super.prototype.setAttribute.call(this, name, value, force);
    if (['smooth', 'points', 'step'].indexOf(name) > -1) {
      this.updatePath();
    }
  };
  SmoothPolyline.prototype.updatePath = function () {
    var _a = this.parsedStyle,
      smooth = _a.smooth,
      points = _a.points,
      step = _a.step;
    var pos = points.points;
    var d = [['M', pos[0][0], pos[0][1]]];
    if (smooth) {
      var constaint = [[0, 0], [1, 1]];
      var sps = Smooth.smooth(pos.map(function (d) {
        return {
          x: d[0],
          y: d[1]
        };
      }), false, constaint);
      for (var i = 0, n = sps.length; i < n; i++) {
        var sp = sps[i];
        d.push(['C', sp[1], sp[2], sp[3], sp[4], sp[5], sp[6]]);
      }
    } else if (step) {
      var i = void 0;
      var l = void 0;
      switch (step) {
        case "start":
          for (i = 1, l = pos.length; i < l; i++) {
            var x = pos[i - 1][0];
            d.push(['L', x, pos[i - 1][1]]);
            d.push(['L', x, pos[i][1]]);
            d.push(['L', pos[i][0], pos[i][1]]);
          }
          break;
        case "middle":
          for (i = 1, l = pos.length; i < l; i++) {
            var x = (pos[i][0] + pos[i - 1][0]) / 2;
            d.push(['L', x, pos[i - 1][1]]);
            d.push(['L', x, pos[i][1]]);
            d.push(['L', pos[i][0], pos[i][1]]);
          }
          break;
        case "end":
          for (i = 1, l = pos.length; i < l; i++) {
            var x = pos[i][0];
            d.push(['L', x, pos[i - 1][1]]);
            d.push(['L', x, pos[i][1]]);
            d.push(['L', pos[i][0], pos[i][1]]);
          }
          break;
      }
    } else {
      var i = void 0;
      var l = void 0;
      for (i = 1, l = pos.length - 1; i < l; i++) {
        d.push(['L', pos[i][0], pos[i][1]]);
      }
      d.push(['L', pos[l][0], pos[l][1]]);
    }
    _super.prototype.setAttribute.call(this, 'path', d);
  };
  SmoothPolyline.tag = 'smooth-polyline';
  return SmoothPolyline;
}(_gLite.Path);